# bot.py
import logging
import json
import os
from telegram import Update
from telegram.ext import Application, CommandHandler, MessageHandler, filters, CallbackContext
from telegram import ReplyKeyboardMarkup, KeyboardButton, WebAppInfo

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# –í–∞—à–∏ —Ç–æ–∫–µ–Ω—ã
BOT_TOKEN = "8249414346:AAH6bXmsfne9O-Cubu1a61vDp_tSNO0VSvc"
DG_TOKEN = "025397fd-2b9e-4524-9c2f-3c4644e3af1a"

# URL –≤–∞—à–µ–≥–æ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
WEB_APP_URL = "https://alexeiyaganov.github.io/2gis_app/map.html"


async def start(update: Update, context: CallbackContext) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    user = update.effective_user

    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    keyboard = [
        [KeyboardButton("üè† –ü–æ–∏—Å–∫ –∂–∏–ª—å—è –≤ –ú–æ—Å–∫–≤–µ", web_app=WebAppInfo(url=WEB_APP_URL))],
        [KeyboardButton("üìç –ü–æ–¥–µ–ª–∏—Ç—å—Å—è –ª–æ–∫–∞—Ü–∏–µ–π", request_location=True)],
        ["‚ÑπÔ∏è –ü–æ–º–æ—â—å", "üèôÔ∏è –†–∞–π–æ–Ω—ã –ú–æ—Å–∫–≤—ã"]
    ]
    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)

    await update.message.reply_text(
        f"–ü—Ä–∏–≤–µ—Ç, {user.first_name}! üëã\n\n"
        "–Ø –±–æ—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞ –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –∂–∏–ª—å—è –≤ –ú–æ—Å–∫–≤–µ.\n\n"
        "üîπ <b>–ü–æ–∏—Å–∫ –∂–∏–ª—å—è</b> - —É–º–Ω—ã–π –ø–æ–¥–±–æ—Ä –∫–≤–∞—Ä—Ç–∏—Ä –ø–æ –≤–∞—à–∏–º –∫—Ä–∏—Ç–µ—Ä–∏—è–º\n"
        "üîπ <b>–†–∞–π–æ–Ω—ã –ú–æ—Å–∫–≤—ã</b> - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–∞–∑–Ω—ã—Ö –æ–∫—Ä—É–≥–∞—Ö\n"
        "üîπ <b>–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏</b> - AI-–ø–æ–¥–±–æ—Ä –ª—É—á—à–∏—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤\n\n"
        "–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –ø–æ–∏—Å–∫:",
        reply_markup=reply_markup,
        parse_mode='HTML'
    )


async def help_command(update: Update, context: CallbackContext) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã –ø–æ–º–æ—â–∏"""
    help_text = """
ü§ñ <b>–ë–æ—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞ –∂–∏–ª—å—è –≤ –ú–æ—Å–∫–≤–µ</b>

üè† <b>–û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:</b>

‚Ä¢ <b>–£–º–Ω—ã–π –ø–æ–∏—Å–∫ –∂–∏–ª—å—è</b> - –ø–æ–¥–±–æ—Ä –∫–≤–∞—Ä—Ç–∏—Ä –ø–æ —Ç–µ–∫—Å—Ç–æ–≤–æ–º—É –∑–∞–ø—Ä–æ—Å—É
‚Ä¢ <b>–†–µ–π—Ç–∏–Ω–≥–∏ —Ä–∞–π–æ–Ω–æ–≤</b> - –æ—Ü–µ–Ω–∫–∞ –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã, —ç–∫–æ–ª–æ–≥–∏–∏, —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞
‚Ä¢ <b>AI-—Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏</b> - –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã–π –ø–æ–¥–±–æ—Ä –ª—É—á—à–∏—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤
‚Ä¢ <b>–ö–∞—Ä—Ç–∞ 2GIS</b> - –ø—Ä–æ—Å–º–æ—Ç—Ä –Ω–∞ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–π –∫–∞—Ä—Ç–µ

üìù <b>–ü—Ä–∏–º–µ—Ä—ã –∑–∞–ø—Ä–æ—Å–æ–≤:</b>
‚Ä¢ "—Å—Ç—É–¥–∏—è —Å –µ–≤—Ä–æ—Ä–µ–º–æ–Ω—Ç–æ–º –¥–æ 100000"
‚Ä¢ "–¥–≤—É—à–∫–∞ —É –º–µ—Ç—Ä–æ –≤ –°–µ–≤–µ—Ä–æ-–ó–∞–ø–∞–¥–Ω–æ–º –æ–∫—Ä—É–≥–µ"
‚Ä¢ "—Ç—Ä–µ—à–∫–∞ –≤ –Ω–æ–≤–æ—Å—Ç—Ä–æ–π–∫–µ —Å –º–µ–±–µ–ª—å—é"

üèôÔ∏è <b>–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ä–∞–π–æ–Ω—ã:</b>
‚Ä¢ –°–µ–≤–µ—Ä–æ-–ó–∞–ø–∞–¥–Ω—ã–π –æ–∫—Ä—É–≥
‚Ä¢ –¶–ê–û - –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π –æ–∫—Ä—É–≥
‚Ä¢ –ó–ê–û - –ó–∞–ø–∞–¥–Ω—ã–π –æ–∫—Ä—É–≥  

‚ö° <b>–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏:</b>
‚Ä¢ 2GIS API –¥–ª—è –∫–∞—Ä—Ç –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ä–∞–π–æ–Ω–∞—Ö
‚Ä¢ AI-–∞–ª–≥–æ—Ä–∏—Ç–º—ã –¥–ª—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π
‚Ä¢ –†–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Å –¶–ò–ê–ù
    """
    await update.message.reply_text(help_text, parse_mode='HTML')


async def handle_location(update: Update, context: CallbackContext) -> None:
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–π –ª–æ–∫–∞—Ü–∏–∏"""
    location = update.message.location
    lat = location.latitude
    lng = location.longitude

    await update.message.reply_text(
        f"üìç <b>–í–∞—à–∞ –ª–æ–∫–∞—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∞!</b>\n\n"
        f"–ú–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –µ–µ –¥–ª—è –ø–æ–∏—Å–∫–∞ –∂–∏–ª—å—è –ø–æ–±–ª–∏–∑–æ—Å—Ç–∏.\n\n"
        f"üåê <b>–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã:</b>\n"
        f"–®–∏—Ä–æ—Ç–∞: <code>{lat}</code>\n"
        f"–î–æ–ª–≥–æ—Ç–∞: <code>{lng}</code>\n\n"
        f"üó∫Ô∏è <a href='https://2gis.ru/geo/{lng},{lat}'>–û—Ç–∫—Ä—ã—Ç—å –≤ 2GIS</a>\n"
        f"üè† <a href='{WEB_APP_URL}?lat={lat}&lng={lng}'>–ò—Å–∫–∞—Ç—å –∂–∏–ª—å–µ —Ä—è–¥–æ–º</a>",
        parse_mode='HTML',
        disable_web_page_preview=True
    )


async def handle_web_app_data(update: Update, context: CallbackContext) -> None:
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    try:
        data = json.loads(update.message.web_app_data.data)
        action = data.get('action')

        if action == 'share_location':
            lat = data.get('lat')
            lng = data.get('lng')
            message = data.get('message', '–ú–æ—è –ª–æ–∫–∞—Ü–∏—è')

            await update.message.reply_location(
                latitude=lat,
                longitude=lng,
                live_period=86400
            )

            await update.message.reply_text(
                f"üìç <b>{message}</b>\n\n"
                f"üó∫Ô∏è <a href='https://2gis.ru/geo/{lng},{lat}'>–û—Ç–∫—Ä—ã—Ç—å –≤ 2GIS</a>",
                parse_mode='HTML'
            )

        elif action == 'share_housing':
            offer = data.get('offer', {})
            message = data.get('message', '–ù–∞–π–¥–µ–Ω–æ –∂–∏–ª—å–µ')

            await update.message.reply_text(
                f"üè† <b>–ù–∞–π–¥–µ–Ω–æ –æ—Ç–ª–∏—á–Ω–æ–µ –∂–∏–ª—å–µ!</b>\n\n"
                f"{message}\n\n"
                f"üìè –ü–ª–æ—â–∞–¥—å: {offer.get('area', 'N/A')} –º¬≤\n"
                f"üè¢ –≠—Ç–∞–∂: {offer.get('floor', 'N/A')}/{offer.get('total_floors', 'N/A')}\n"
                f"üöá –î–æ –º–µ—Ç—Ä–æ: {offer.get('metro_time', 'N/A')} –º–∏–Ω\n"
                f"‚≠ê –†–µ–π—Ç–∏–Ω–≥: {offer.get('score', 'N/A')}\n\n"
                f"<a href='{WEB_APP_URL}'>–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞ –∫–∞—Ä—Ç–µ</a>",
                parse_mode='HTML'
            )

    except Exception as e:
        logger.error(f"Error processing web app data: {e}")
        await update.message.reply_text("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –¥–∞–Ω–Ω—ã—Ö")


async def handle_message(update: Update, context: CallbackContext) -> None:
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
    text = update.message.text

    if text == "‚ÑπÔ∏è –ü–æ–º–æ—â—å":
        await help_command(update, context)
    elif text == "üèôÔ∏è –†–∞–π–æ–Ω—ã –ú–æ—Å–∫–≤—ã":
        await send_districts_info(update, context)
    else:
        await update.message.reply_text(
            "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ –¥–ª—è –ø–æ–∏—Å–∫–∞ –∂–∏–ª—å—è üè†",
            reply_markup=ReplyKeyboardMarkup([
                [KeyboardButton("üè† –ü–æ–∏—Å–∫ –∂–∏–ª—å—è –≤ –ú–æ—Å–∫–≤–µ", web_app=WebAppInfo(url=WEB_APP_URL))],
                [KeyboardButton("üìç –ü–æ–¥–µ–ª–∏—Ç—å—Å—è –ª–æ–∫–∞—Ü–∏–µ–π", request_location=True)],
                ["üèôÔ∏è –†–∞–π–æ–Ω—ã –ú–æ—Å–∫–≤—ã", "‚ÑπÔ∏è –ü–æ–º–æ—â—å"]
            ], resize_keyboard=True)
        )


async def send_districts_info(update: Update, context: CallbackContext) -> None:
    """–û—Ç–ø—Ä–∞–≤–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ä–∞–π–æ–Ω–∞—Ö –ú–æ—Å–∫–≤—ã"""
    districts_info = """
üèôÔ∏è <b>–†–∞–π–æ–Ω—ã –ú–æ—Å–∫–≤—ã –¥–ª—è –ø–æ–∏—Å–∫–∞ –∂–∏–ª—å—è</b>

<b>–°–µ–≤–µ—Ä–æ-–ó–∞–ø–∞–¥–Ω—ã–π –æ–∫—Ä—É–≥</b>
‚Ä¢ –≠–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∏ —á–∏—Å—Ç—ã–π —Ä–∞–π–æ–Ω
‚Ä¢ –†–∞–∑–≤–∏—Ç–∞—è –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞  
‚Ä¢ –•–æ—Ä–æ—à–∞—è —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω–∞—è –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å
‚Ä¢ –£–º–µ—Ä–µ–Ω–Ω—ã–µ —Ü–µ–Ω—ã –Ω–∞ –∂–∏–ª—å–µ

<b>–¶–ê–û - –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π –æ–∫—Ä—É–≥</b>
‚Ä¢ –ü—Ä–µ—Å—Ç–∏–∂–Ω—ã–π —Ü–µ–Ω—Ç—Ä –≥–æ—Ä–æ–¥–∞
‚Ä¢ –û—Ç–ª–∏—á–Ω–∞—è —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω–∞—è –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å  
‚Ä¢ –í—ã—Å–æ–∫–∏–µ —Ü–µ–Ω—ã –Ω–∞ –∂–∏–ª—å–µ
‚Ä¢ –ú–Ω–æ–≥–æ –∫—É–ª—å—Ç—É—Ä–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤

<b>–ó–ê–û - –ó–∞–ø–∞–¥–Ω—ã–π –æ–∫—Ä—É–≥</b>
‚Ä¢ –•–æ—Ä–æ—à–∞—è —ç–∫–æ–ª–æ–≥–∏—è
‚Ä¢ –†–∞–∑–≤–∏—Ç–∞—è –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞
‚Ä¢ –ö–æ–º—Ñ–æ—Ä—Ç–Ω—ã–µ —Å–ø–∞–ª—å–Ω—ã–µ —Ä–∞–π–æ–Ω—ã
‚Ä¢ –£–º–µ—Ä–µ–Ω–Ω—ã–µ —Ü–µ–Ω—ã

<b>–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–π–æ–Ω –≤ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –¥–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏ –ø–æ–∏—Å–∫–∞ –∂–∏–ª—å—è!</b>
    """

    await update.message.reply_text(
        districts_info,
        parse_mode='HTML',
        reply_markup=ReplyKeyboardMarkup([
            [KeyboardButton("üè† –ü–æ–∏—Å–∫ –∂–∏–ª—å—è –≤ –ú–æ—Å–∫–≤–µ", web_app=WebAppInfo(url=WEB_APP_URL))],
            ["‚ÑπÔ∏è –ü–æ–º–æ—â—å"]
        ], resize_keyboard=True)
    )


def main() -> None:
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
    # –°–æ–∑–¥–∞–µ–º Application
    application = Application.builder().token(BOT_TOKEN).build()

    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("help", help_command))
    application.add_handler(MessageHandler(filters.LOCATION, handle_location))
    application.add_handler(MessageHandler(filters.StatusUpdate.WEB_APP_DATA, handle_web_app_data))
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    print("ü§ñ –ë–æ—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")
    print(f"üîë –¢–æ–∫–µ–Ω –±–æ—Ç–∞: {BOT_TOKEN[:10]}...")
    print(f"üó∫Ô∏è –¢–æ–∫–µ–Ω 2GIS: {DG_TOKEN[:10]}...")
    print("üè† –°–∏—Å—Ç–µ–º–∞ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –∂–∏–ª—å—è –≥–æ—Ç–æ–≤–∞!")
    print("üìä –ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è —Ä–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ñ–∞–π–ª–∞ cian_north_west")
    print("‚è≥ –û–∂–∏–¥–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è...")

    application.run_polling()
    print("‚úÖ –ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!")


if __name__ == "__main__":
    main()